// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'preffered_size_builder.dart';

// **************************************************************************
// Generator: JsonWidgetLibraryBuilder
// **************************************************************************

// ignore_for_file: deprecated_member_use

// ignore_for_file: prefer_const_constructors
// ignore_for_file: prefer_const_constructors_in_immutables
// ignore_for_file: prefer_final_locals
// ignore_for_file: prefer_single_quotes
// ignore_for_file: unused_local_variable

class PreferredSizeBuilder extends _PreferredSizeBuilder {
  const PreferredSizeBuilder({required super.args});

  static const kType = 'preferred_size';

  /// Constant that can be referenced for the builder's type.
  @override
  String get type => kType;

  /// Static function that is capable of decoding the widget from a dynamic JSON
  /// or YAML set of values.
  static PreferredSizeBuilder fromDynamic(
    dynamic map, {
    JsonWidgetRegistry? registry,
  }) =>
      PreferredSizeBuilder(
        args: map,
      );
  @override
  PreferredSizeBuilderModel createModel({
    ChildWidgetBuilder? childBuilder,
    required JsonWidgetData data,
  }) {
    final model = PreferredSizeBuilderModel.fromDynamic(
      args,
      registry: data.jsonWidgetRegistry,
    );

    return model;
  }

  @override
  PreferredSize buildCustom({
    ChildWidgetBuilder? childBuilder,
    required BuildContext context,
    required JsonWidgetData data,
    Key? key,
  }) {
    final model = createModel(
      childBuilder: childBuilder,
      data: data,
    );

    return PreferredSize(
      key: key,
      preferredSize: model.preferredSize,
      child: model.child.build(
        childBuilder: childBuilder,
        context: context,
      ),
    );
  }
}

class JsonPreferredSize extends JsonWidgetData {
  JsonPreferredSize({
    Map<String, dynamic> args = const {},
    JsonWidgetRegistry? registry,
    required this.preferredSize,
    required this.child,
  }) : super(
          jsonWidgetArgs: PreferredSizeBuilderModel.fromDynamic(
            {
              'preferredSize': preferredSize,
              'child': child,
              ...args,
            },
            args: args,
            registry: registry,
          ),
          jsonWidgetBuilder: () => PreferredSizeBuilder(
            args: PreferredSizeBuilderModel.fromDynamic(
              {
                'preferredSize': preferredSize,
                'child': child,
                ...args,
              },
              args: args,
              registry: registry,
            ),
          ),
          jsonWidgetType: PreferredSizeBuilder.kType,
        );

  final Size preferredSize;

  /* AUTOGENERATED FROM [PreferredSize.child]*/
  /// The widget below this widget in the tree.
  ///
  /// {@macro flutter.widgets.ProxyWidget.child}
  final JsonWidgetData child;
}

/* AUTOGENERATED FROM [PreferredSize]*/
/// Creates a widget that has a preferred size that the parent can query.
class PreferredSizeBuilderModel extends JsonWidgetBuilderModel {
  const PreferredSizeBuilderModel(
    super.args, {
    required this.preferredSize,
    required this.child,
  });

  final Size preferredSize;

  /* AUTOGENERATED FROM [PreferredSize.child]*/
  /// The widget below this widget in the tree.
  ///
  /// {@macro flutter.widgets.ProxyWidget.child}
  final JsonWidgetData child;

  static PreferredSizeBuilderModel fromDynamic(
    dynamic map, {
    Map<String, dynamic> args = const {},
    JsonWidgetRegistry? registry,
  }) {
    final result = maybeFromDynamic(
      map,
      args: args,
      registry: registry,
    );

    if (result == null) {
      throw Exception(
        '[PreferredSizeBuilder]: requested to parse from dynamic, but the input is null.',
      );
    }

    return result;
  }

  static PreferredSizeBuilderModel? maybeFromDynamic(
    dynamic map, {
    Map<String, dynamic> args = const {},
    JsonWidgetRegistry? registry,
  }) {
    PreferredSizeBuilderModel? result;

    if (map != null) {
      if (map is String) {
        map = yaon.parse(
          map,
          normalize: true,
        );
      }

      if (map is PreferredSizeBuilderModel) {
        result = map;
      } else {
        registry ??= JsonWidgetRegistry.instance;
        map = registry.processArgs(map, <String>{}).value;
        result = PreferredSizeBuilderModel(
          args,
          preferredSize: () {
            dynamic parsed = ThemeDecoder.decodeSize(
              map['preferredSize'],
              validate: false,
            );

            if (parsed == null) {
              throw Exception(
                  'Null value encountered for required parameter: [preferredSize].');
            }
            return parsed;
          }(),
          child: () {
            dynamic parsed = JsonWidgetData.fromDynamic(
              map['child'],
              registry: registry,
            );

            if (parsed == null) {
              throw Exception(
                  'Null value encountered for required parameter: [child].');
            }
            return parsed;
          }(),
        );
      }
    }

    return result;
  }

  @override
  Map<String, dynamic> toJson() {
    return JsonClass.removeNull({
      'preferredSize': ThemeEncoder.encodeSize(
        preferredSize,
      ),
      'child': child.toJson(),
      ...args,
    });
  }
}

class PreferredSizeSchema {
  static const id =
      'https://peiffer-innovations.github.io/flutter_json_schemas/schemas/gen_build/preferred_size.json';

  static final schema = <String, Object>{
    r'$schema': 'http://json-schema.org/draft-07/schema#',
    r'$id': id,
    'title': 'PreferredSize',
    'type': 'object',
    'additionalProperties': false,
    'properties': {
      'preferredSize': SchemaHelper.objectSchema(SizeSchema.id),
      'child': SchemaHelper.objectSchema(JsonWidgetDataSchema.id),
    },
  };
}
